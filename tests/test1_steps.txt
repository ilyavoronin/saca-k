                         ##### TEST 1 ######

----data
0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21
1  2  1  3  1  2  1  5  1  2  1  8  8  8  2  2  2  7  2  3  2  0
S  L  S  L  S  L  S  L  S  L  S  L  L  L  S  S  S  L  S  L  L  S                  
      !     !     !     !     !           !           !        !    (is lms)

LMS : 2 4 6 8 10 14 18 21

i:             0  1  2  3  4  5  6  7  8  9
block begin:   0  1  7  15 17 17 18 18 19 22




<TEST putLMS0>
----after putLms0
     S0 S1                S2                      S3    S5 S7 S8
i:   0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21                                                      
SA:  21 E  2  4  6  8  10 E  E  E  E  E  E  14 18 E  E  E  E  E  E  E




<TEST inducedSort0>
----after inducedSort0 for L
     S0 S1                S2                      S3    S5 S7 S8
i:   0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21                                                      
SA:  21 E  E  E  E  E  E  E  1  5  9  E  E  E  E  3  19 7  17  E  E 11


----after inducedSort0 for S
     S0 S1                S2                      S3    S5 S7 S8
i:   0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21                                                      
SA:  21 E  4  8  2  6  10 E  E  E  E  14 E  18 E  E  E  E  E  E  E  E

----after moving all lms to beginning
i:   0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21                                                      
SA:  21 4  8  2  6  10 14 18 E  E  E  E  E  E  E  E  E  E  E  E  E  E



<TEST formNewString0>
----division into classes of equivalence
i:         0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21                                                      
SA:        21 4  8  2  6  10 14 18 E  E  E  E  E  E  E  E  E  E  E  E  E  E
EqClasses: 0  1  1  2  3  4  5  6

----new string
i:         0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21                                                      
SA:        ?  ?  ?  ?  ?  ?  ?  ?  ?  ?  ?  ?  ?  ?  3  2  4  2  5  6  7  0



<TEST putLMS1>
----before
i:         0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21
SA:        E  E  E  E  E  E  E  E  E  E  E  E  E  E  3  2  4  2  5  6  7  0
type:                                                L  S! L  S! S  S  L  S!

----after
i:         0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21                                                      
SA:        21 15 17 E  E  E  E  E  E  E  E  E  E  E  3  2  4  2  5  6  7  0



<TEST inducedSort1L for substrings>
----before
i:         0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21
SA:        21 15 17 E  E  E  E  E  E  E  E  E  E  E  3  2  4  2  5  6  7  0
type:                                                L  S! L  S! S  S  L  S!

----after
i:         0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21
SA:        E  E  E  14 16 E  E  20 E  E  E  E  E  E  3  2  4  2  5  6  7  0

<TEST inducedSort1S for substrings>
----before
i:         0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21
SA:        E  E  E  14 16 E  E  20 E  E  E  E  E  E  3  2  4  2  5  6  7  0
type:                                                L  S! L  S! S  S  L  S!

----after
i:         0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21
SA:        21 15 17 E  E  E  E  E  E  E  E  E  E  E  3  2  4  2  5  6  7  0

<TEST formNewString1>
----before
i:         0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21
SA:        21 15 17 E  E  E  E  E  E  E  E  E  E  E  3  2  4  2  5  6  7  0

----after
                                            |      | <- new string
i:         0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21
SA:        E  E  E  E  E  E  E  E  E  E  E  1  2  0  3  2  4  2  5  6  7  0


---------------here recursion ends cause all values in the new string is distinct--------------------

	----after forming suffix array for new string
	i:         0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21
	SA:        13 11 12 E  E  E  E  E  E  E  E  1  2  0  3  2  4  2  5  6  7  0


<TEST putLmsToBegin1>
----before
i:         0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21
SA:        13 11 12 E  E  E  E  E  E  E  E  1  2  0  3  2  4  2  5  6  7  0
type:                                                L  S! L  S! S  S  L  S!

--after
i:         0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21
SA:        21 15 17 E  E  E  E  E  E  E  E  E  E  E  3  2  4  2  5  6  7  0

<TEST putSortedLMS>
----before
i:         0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21
SA:        21 15 17 E  E  E  E  E  E  E  E  E  E  E  3  2  4  2  5  6  7  0
type:                                                L  S! L  S! S  S  L  S!

----after
i:         0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21
SA:        21 15 17 E  E  E  E  E  E  E  E  E  E  E  3  2  4  2  5  6  7  0

<TEST inducedSort1L>
----before
i:         0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21
SA:        21 15 17 E  E  E  E  E  E  E  E  E  E  E  3  2  4  2  5  6  7  0
type:                                                L  S! L  S! S  S  L  S!

----after
i:         0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21
SA:        E  E  E  14 16 E  E  20 E  E  E  E  E  E  3  2  4  2  5  6  7  0

<TEST inducedSort1S>
----before
i:         0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21
SA:        E  E  14 16 E  E  20 E  E  E  E  E  E  E  3  2  4  2  5  6  7  0
type:                                                L  S! L  S! S  S  L  S!

----after
i:         0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21
SA:        21 15 17 14 16 18 19 20 E  E  E  E  E  E  3  2  4  2  5  6  7  0


--------------------here we return on level 0------------------------------

<Test putLMSToBegin0>

i:      0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21
data:   1  2  1  3  1  2  1  5  1  2  1  8  8  8  2  2  2  7  2  3  2  0
type:   S  L  S! L  S! L  S! L  S! L  S! L  L  L  S! S  S  L  S! L  L  S!  

----before 
i:         0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21
SA:        21 15 17 14 16 18 19 20 E  E  E  E  E  E  3  2  4  2  5  6  7  21

----after we put all lms-indexes from data to the end of SA
i:         0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21
SA:        21 15 17 14 16 18 19 20 E  E  E  E  E  E  2  4  6  8  10 14 18 21

----after we put all lms-indexes to the beginning of the SA
i:         0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21
SA:        21 4  8  2  6  10 14 18 E  E  E  E  E  E  2  4  6  8  10 14 18 21


<Test putSortedLMS0>



i:      0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21
data:   1  2  1  3  1  2  1  5  1  2  1  8  8  8  2  2  2  7  2  3  2  0
type:   S  L  S! L  S! L  S! L  S! L  S! L  L  L  S! S  S  L  S! L  L  S!  

i:             0  1  2  3  4  5  6  7  8  9
block begin:   0  1  7  15 17 17 18 18 19 22


----before
i:         0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21
SA:        21 4  8  2  6  10 14 18 E  E  E  E  E  E  2  4  6  8  10 14 18 21

----assign -1
i:         0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21
SA:        21 4  8  2  6  10 14 18 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1

----after
i:         0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21
SA:        21 -1 4  8  2  6  10 -1 -1 -1 -1 -1 -1 14 18 -1 -1 -1 -1 -1 -1 -1



<Test inducedSort0>
i:      0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21
data:   1  2  1  3  1  2  1  5  1  2  1  8  8  8  2  2  2  7  2  3  2  0
type:   S  L  S! L  S! L  S! L  S! L  S! L  L  L  S! S  S  L  S! L  L  S!  

i:             0  1  2  3  4  5  6  7  8  9
block begin:   0  1  7  15 17 17 18 18 19 22


----before
           S0 S1                S2                      S3    S5 S7 S8
i:         0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21
SA:        21 E  4  8  2  6  10 E  E  E  E  E  E  14 18 E  E  E  E  E  E  E 


           S0 S1                S2                      S3    S5 S7 S8
i:         0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21
SA:        21 0  4  8  2  6  10 20 1  5  9  14 15 18 16 3  19 7  17 13 12 11



##########  RESULT  ###############
i:     0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21
SA:	   21 0  4  8  2  6  10 20 1  5  9  14 15 18 16 3  19 7  17 13 12 11